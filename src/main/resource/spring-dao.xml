<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
                        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd  
                        http://www.springframework.org/schema/context  
                        http://www.springframework.org/schema/context/spring-context-4.0.xsd  
                        http://www.springframework.org/schema/tx 
		                http://www.springframework.org/schema/tx/spring-tx-4.0.xsd 
                        http://www.springframework.org/schema/mvc  
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
         <!--配置整合mybatis过程-->
         <!--配置数据库相关参数-->
		<bean id="propertyConfigurer"
			class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
			<property name="location" value="classpath:jdbc.properties" />
		</bean>
         <!--数据库连接池-->
       <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
			<property name="driverClassName" value="${jdbc.driver}" />
			<property name="url" value="${jdbc.url}" />
			<property name="username" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />
			<!-- 初始化连接大小 -->
			<property name="initialSize" value="${jdbc.initialSize}"></property>
			<!-- 连接池最大数量 -->
			<property name="maxActive" value="${jdbc.maxActive}"></property>
			<!-- 连接池最大空闲 -->
			<property name="maxIdle" value="${jdbc.maxIdle}"></property>
			<!-- 连接池最小空闲 -->
			<property name="minIdle" value="${jdbc.minIdle}"></property>
			<!-- 获取连接最大等待时间 -->
			<property name="maxWait" value="${jdbc.maxWait}"></property>
			<!-- 连接被泄露时是否打印 -->  
			<property name="logAbandoned" value="${jdbc.logAbandoned}"/>  
			<!--removeAbandoned: 是否自动回收超时连接-->    
			<property name="removeAbandoned"  value="${jdbc.removeAbandoned}"/>  
			<!--removeAbandonedTimeout: 超时时间(以秒数为单位)-->    
			<property name="removeAbandonedTimeout" value="${jdbc.removeAbandonedTimeout}"/>  
			<!--验证数据库连接的有效性 -->
			<property name="validationQuery" value="${jdbc.validationQuery}"/>  
			<!--若配置为true,对性能有非常大的影响，性能会下降7-10倍。所在一定要配置为false. -->
			<property name="testOnBorrow" value="${jdbc.testOnBorrow}"/>  
			<!--指明连接是否被空闲连接回收器(如果有)进行检验.如果检测失败,则连接将被从池中去除 -->
			<property name="testWhileIdle" value="${jdbc.testWhileIdle}"/> 
			<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
	        <property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}" />
	        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
	        <property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis}" />
		</bean>

         <!--配置sqlSessionFactory对象-->
         <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
             <!--注入数据库连接池-->
             <property name="dataSource" ref="dataSource"/>
             <!--扫描entity包，使用别名-->
             <property name="typeAliasesPackage" value="com.dream.model"/>
             <!--扫描sql配置文件
             <property name="mapperLocations" value="classpath:com/dream/mapper/*.xml"/>-->
         </bean>
         <!-- mapper扫描 -->
		<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
			<property name="annotationClass" value="org.springframework.stereotype.Repository" />
			 <!--注入sqlSessionFactory对象-->
             <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
			<property name="basePackage" value="com.dream.mapper" />
		</bean>
        <!--  <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" >
			<constructor-arg index="0" ref="sqlSessionFactory" />
		</bean> -->
 </beans>